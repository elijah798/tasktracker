// Generated by Xata Codegen 0.23.2. Please do not edit.
import { buildClient } from "@xata.io/client";
/** @typedef { import('./types').SchemaTables } SchemaTables */
/** @type { SchemaTables } */
const tables = [
  {
    name: "tasks",
    columns: [
      { name: "Description", type: "string" },
      { name: "Status", type: "string" },
      { name: "Priority", type: "string" },
      { name: "Owner", type: "string" },
      { name: "Type", type: "string" },
      { name: "Date_Created", type: "datetime" },
      { name: "Last_Updated", type: "datetime" },
      { name: "Project", type: "link", link: { table: "projects" } },
      { name: "DueDate", type: "datetime" },
      { name: "project_id", type: "link", link: { table: "projects" } },
      { name: "Title", type: "string" },
    ],
  },
  {
    name: "projects",
    columns: [
      { name: "Project_Title", type: "string" },
      { name: "Project_Description", type: "string" },
      { name: "Created_Date", type: "datetime" },
      { name: "Last_Updated", type: "datetime" },
      { name: "Team", type: "link", link: { table: "nextauth_users" } },
    ],
  },
  {
    name: "nextauth_users",
    columns: [
      { name: "email", type: "email" },
      { name: "emailVerified", type: "datetime" },
      { name: "name", type: "string" },
      { name: "image", type: "string" },
      { name: "Role", type: "string", defaultValue: "Guest" },
    ],
  },
  {
    name: "nextauth_accounts",
    columns: [
      { name: "user", type: "link", link: { table: "nextauth_users" } },
      { name: "type", type: "string" },
      { name: "provider", type: "string" },
      { name: "providerAccountId", type: "string" },
      { name: "refresh_token", type: "string" },
      { name: "access_token", type: "string" },
      { name: "expires_at", type: "int" },
      { name: "token_type", type: "string" },
      { name: "scope", type: "string" },
      { name: "id_token", type: "text" },
      { name: "session_state", type: "string" },
    ],
  },
  {
    name: "nextauth_verificationTokens",
    columns: [
      { name: "identifier", type: "string" },
      { name: "token", type: "string" },
      { name: "expires", type: "datetime" },
    ],
  },
  {
    name: "nextauth_users_accounts",
    columns: [
      { name: "user", type: "link", link: { table: "nextauth_users" } },
      { name: "account", type: "link", link: { table: "nextauth_accounts" } },
    ],
  },
  {
    name: "nextauth_users_sessions",
    columns: [
      { name: "user", type: "link", link: { table: "nextauth_users" } },
      { name: "session", type: "link", link: { table: "nextauth_sessions" } },
    ],
  },
  {
    name: "nextauth_sessions",
    columns: [
      { name: "sessionToken", type: "string" },
      { name: "expires", type: "datetime" },
      { name: "user", type: "link", link: { table: "nextauth_users" } },
    ],
  },
  {
    name: "roles",
    columns: [
      { name: "read", type: "int", defaultValue: "0" },
      { name: "write", type: "int", defaultValue: "0" },
      { name: "delete", type: "int" },
      { name: "edit", type: "int", defaultValue: "0" },
      { name: "RoleID", type: "string" },
    ],
  },
];
/** @type { import('../../client/src').ClientConstructor<{}> } */
const DatabaseClient = buildClient();
const defaultOptions = {
  databaseURL:
    "https://Elijah-Sellers-s-workspace-d25an5.us-east-1.xata.sh/db/ProjectTracker",
};
/** @typedef { import('./types').DatabaseSchema } DatabaseSchema */
/** @extends DatabaseClient<DatabaseSchema> */
export class XataClient extends DatabaseClient {
  constructor(options) {
    super({ ...defaultOptions, ...options }, tables);
  }
}
let instance = undefined;
/** @type { () => XataClient } */
export const getXataClient = () => {
  if (instance) return instance;
  instance = new XataClient();
  return instance;
};
